/*------------------------------------*\
    Aleut is a fork of [inuit.css](http://inuitcss.com/)
    This is starter where we import all the packages from aleut into this style-sheet.
    These files we can not change. However these are heavily based on SCSS variables, so we can change
    these by supplying the specific SCSS-variable before we import each SCSS-file.
    By default most of aleut is turned off, so we need to turn on each class via variables before importing.
    We have structured the CSS in a specific way to avoid specificity-problems.
    Basically we are first targetting elements without class-names etc,
    then we are applying abstract patterns before we apply most of our own styles and
    in the end helper-classes and layouts that should overwrite everything else..
    All classes are also have namespaces. This means that you by looking at the prefix-of the class can
    see where it is located and whether you can modify the file or not.
    Read http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/ for more information
\*------------------------------------*/


/*------------------------------------*\
    #SETTINGS
    Global variables, site-wide settings, config switches, etc.
    These are just for SCSS – nothing here gets compiled to CSS directly
\*------------------------------------*/

@import "~aleut.settings.defaults";
@import "~aleut.settings.responsive";
//@import "scss/_settings.fonts.scss";
//++ our own remaps of inuits variables


/*------------------------------------*\
    #TOOLS
    Site-wide mixins and functions.
    These are just for SCSS - nothing here gets directly compiled to CSS.
\*------------------------------------*/

@import "~aleut.tools.functions";
@import "~aleut.tools.mixins";
@import "~aleut.tools.responsive";
@import "~aleut.tools.widths";
@import "~aleut.tools.clearfix";
//++ Our additional functions



/*------------------------------------*\
    #GENERIC
    Low-specificity, far-reaching rulesets (e.g. resets).
    Here we have our basic resets
\*------------------------------------*/

@import "~aleut.generic.normalize";
@import "~aleut.generic.reset";
@import "~aleut.generic.box-sizing";
//@import "~aleut.generic.shared";


/*------------------------------------*\
    #BASE
    Unclassed HTML elements (e.g. a {}, blockquote {}, address {}).
    Here we style all our HTML-elements with the basic styling we want.
	https://github.com/aleutcss?query=base
\*------------------------------------*/

@import "~aleut.base.page";
@import "~aleut.base.images";
@import "~aleut.base.lists";
@import "~aleut.base.headings";
//@import "scss/_base.page.scss"; //our own variation of base.page

/*------------------------------------*\
    #OBJECTS (o-prefix)
    Objects, abstractions, and design patterns (e.g. .o-media {}).
    Here we import abstractions without styling etc.
    Missing some abstractions? Read trough the SCSS-files imported to turn
    on variables or get new ones from here:
    https://github.com/aleutcss?query=objects.
\*------------------------------------*/

//@import "~aleut.objects.block";
//@import "~aleut.objects.box";
//@import "~aleut.objects.buttons";
//@import "~aleut.objects.flag";

@import "~aleut.objects.layout";
//@import "~aleut.objects.list-bare";
//@import "~aleut.objects.list-block";
@import "~aleut.objects.list-inline";
//@import "~aleut.objects.list-ui";
//@import "~aleut.objects.media";
//@import "~aleut.objects.pack";
//@import "~aleut.objects.tables";
//@import "~aleut.objects.tabs";

/*------------------------------------*\
    #VENDOR
    Third party CSS for plugins etc.
\*------------------------------------*/

//@import "_vendor.[something].scss";


/*------------------------------------*\
    #COMPONENTS (c-prefix)
    Discrete, complete chunks of UI (e.g. `.c-carousel {}`).
    This is the one layer that aleutcss doesn’t get involved with.
    Here you place your own visual styling.
\*------------------------------------*/

//@import "scss/components/_components.header.scss";
//@import "scss/components/_components.hero.scss";
//@import "scss/components/_components.footer.scss";
//++


/*------------------------------------*\
    #Utilities (u-prefix)
    High-specificity, very explicit selectors. Overrides and helper classes (e.g. .u-hidden {})
    Helpers and layout-classes
	https://github.com/aleutcss?query=utilities
\*------------------------------------*/
@import "~aleut.utilities.clearfix";
@import "~aleut.utilities.headings";
@import "~aleut.utilities.print";
@import "~aleut.utilities.spacing";
@import "~aleut.utilities.spacing-responsive";
@import "~aleut.utilities.widths";
@import "~aleut.utilities.widths-responsive";
